// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameAllClusterSlowQuery = "all_cluster_slow_query"

// AllClusterSlowQuery mapped from table <all_cluster_slow_query>
type AllClusterSlowQuery struct {
	Cluster                   *string    `gorm:"column:Cluster;type:varchar(64);index:idx_1,priority:1" json:"Cluster"`
	SAMPLESTARTTIME           *time.Time `gorm:"column:SAMPLE_START_TIME;type:datetime" json:"SAMPLE_START_TIME"`
	SAMPLEENDTIME             *time.Time `gorm:"column:SAMPLE_END_TIME;type:datetime" json:"SAMPLE_END_TIME"`
	INSTANCE                  *string    `gorm:"column:INSTANCE;type:varchar(64)" json:"INSTANCE"`
	Time                      time.Time  `gorm:"column:Time;type:datetime(6);not null;index:idx_1,priority:2" json:"Time"`
	TxnStartTs                *uint64    `gorm:"column:Txn_start_ts;type:bigint unsigned" json:"Txn_start_ts"`
	User                      *string    `gorm:"column:User;type:varchar(64)" json:"User"`
	Host                      *string    `gorm:"column:Host;type:varchar(64)" json:"Host"`
	ConnID                    *uint64    `gorm:"column:Conn_ID;type:bigint unsigned" json:"Conn_ID"`
	SessionAlias              *string    `gorm:"column:Session_alias;type:varchar(64)" json:"Session_alias"`
	ExecRetryCount            *uint64    `gorm:"column:Exec_retry_count;type:bigint unsigned" json:"Exec_retry_count"`
	ExecRetryTime             *float64   `gorm:"column:Exec_retry_time;type:double" json:"Exec_retry_time"`
	QueryTime                 *float64   `gorm:"column:Query_time;type:double" json:"Query_time"`
	ParseTime                 *float64   `gorm:"column:Parse_time;type:double" json:"Parse_time"`
	CompileTime               *float64   `gorm:"column:Compile_time;type:double" json:"Compile_time"`
	RewriteTime               *float64   `gorm:"column:Rewrite_time;type:double" json:"Rewrite_time"`
	PreprocSubqueries         *uint64    `gorm:"column:Preproc_subqueries;type:bigint unsigned" json:"Preproc_subqueries"`
	PreprocSubqueriesTime     *float64   `gorm:"column:Preproc_subqueries_time;type:double" json:"Preproc_subqueries_time"`
	OptimizeTime              *float64   `gorm:"column:Optimize_time;type:double" json:"Optimize_time"`
	WaitTS                    *float64   `gorm:"column:Wait_TS;type:double" json:"Wait_TS"`
	PrewriteTime              *float64   `gorm:"column:Prewrite_time;type:double" json:"Prewrite_time"`
	WaitPrewriteBinlogTime    *float64   `gorm:"column:Wait_prewrite_binlog_time;type:double" json:"Wait_prewrite_binlog_time"`
	CommitTime                *float64   `gorm:"column:Commit_time;type:double" json:"Commit_time"`
	GetCommitTsTime           *float64   `gorm:"column:Get_commit_ts_time;type:double" json:"Get_commit_ts_time"`
	CommitBackoffTime         *float64   `gorm:"column:Commit_backoff_time;type:double" json:"Commit_backoff_time"`
	BackoffTypes              *string    `gorm:"column:Backoff_types;type:varchar(64)" json:"Backoff_types"`
	ResolveLockTime           *float64   `gorm:"column:Resolve_lock_time;type:double" json:"Resolve_lock_time"`
	LocalLatchWaitTime        *float64   `gorm:"column:Local_latch_wait_time;type:double" json:"Local_latch_wait_time"`
	WriteKeys                 *uint64    `gorm:"column:Write_keys;type:bigint" json:"Write_keys"`
	WriteSize                 *uint64    `gorm:"column:Write_size;type:bigint" json:"Write_size"`
	PrewriteRegion            *uint64    `gorm:"column:Prewrite_region;type:bigint" json:"Prewrite_region"`
	TxnRetry                  *uint64    `gorm:"column:Txn_retry;type:bigint" json:"Txn_retry"`
	CopTime                   *float64   `gorm:"column:Cop_time;type:double" json:"Cop_time"`
	ProcessTime               *float64   `gorm:"column:Process_time;type:double" json:"Process_time"`
	WaitTime                  *float64   `gorm:"column:Wait_time;type:double" json:"Wait_time"`
	BackoffTime               *float64   `gorm:"column:Backoff_time;type:double" json:"Backoff_time"`
	LockKeysTime              *float64   `gorm:"column:LockKeys_time;type:double" json:"LockKeys_time"`
	RequestCount              *uint64    `gorm:"column:Request_count;type:bigint unsigned" json:"Request_count"`
	TotalKeys                 *uint64    `gorm:"column:Total_keys;type:bigint unsigned" json:"Total_keys"`
	ProcessKeys               *uint64    `gorm:"column:Process_keys;type:bigint unsigned" json:"Process_keys"`
	RocksdbDeleteSkippedCount *uint64    `gorm:"column:Rocksdb_delete_skipped_count;type:bigint unsigned" json:"Rocksdb_delete_skipped_count"`
	RocksdbKeySkippedCount    *uint64    `gorm:"column:Rocksdb_key_skipped_count;type:bigint unsigned" json:"Rocksdb_key_skipped_count"`
	RocksdbBlockCacheHitCount *uint64    `gorm:"column:Rocksdb_block_cache_hit_count;type:bigint unsigned" json:"Rocksdb_block_cache_hit_count"`
	RocksdbBlockReadCount     *uint64    `gorm:"column:Rocksdb_block_read_count;type:bigint unsigned" json:"Rocksdb_block_read_count"`
	RocksdbBlockReadByte      *uint64    `gorm:"column:Rocksdb_block_read_byte;type:bigint unsigned" json:"Rocksdb_block_read_byte"`
	DB                        *string    `gorm:"column:DB;type:varchar(64)" json:"DB"`
	IndexNames                *string    `gorm:"column:Index_names;type:varchar(100)" json:"Index_names"`
	IsInternal                *uint8     `gorm:"column:Is_internal;type:tinyint(1)" json:"Is_internal"`
	Digest                    *string    `gorm:"column:Digest;type:varchar(64)" json:"Digest"`
	Stats                     *string    `gorm:"column:Stats;type:varchar(512)" json:"Stats"`
	CopProcAvg                *float64   `gorm:"column:Cop_proc_avg;type:double" json:"Cop_proc_avg"`
	CopProcP90                *float64   `gorm:"column:Cop_proc_p90;type:double" json:"Cop_proc_p90"`
	CopProcMax                *float64   `gorm:"column:Cop_proc_max;type:double" json:"Cop_proc_max"`
	CopProcAddr               *string    `gorm:"column:Cop_proc_addr;type:varchar(64)" json:"Cop_proc_addr"`
	CopWaitAvg                *float64   `gorm:"column:Cop_wait_avg;type:double" json:"Cop_wait_avg"`
	CopWaitP90                *float64   `gorm:"column:Cop_wait_p90;type:double" json:"Cop_wait_p90"`
	CopWaitMax                *float64   `gorm:"column:Cop_wait_max;type:double" json:"Cop_wait_max"`
	CopWaitAddr               *string    `gorm:"column:Cop_wait_addr;type:varchar(64)" json:"Cop_wait_addr"`
	MemMax                    *uint64    `gorm:"column:Mem_max;type:bigint" json:"Mem_max"`
	DiskMax                   *uint64    `gorm:"column:Disk_max;type:bigint" json:"Disk_max"`
	KVTotal                   *float64   `gorm:"column:KV_total;type:double" json:"KV_total"`
	PDTotal                   *float64   `gorm:"column:PD_total;type:double" json:"PD_total"`
	BackoffTotal              *float64   `gorm:"column:Backoff_total;type:double" json:"Backoff_total"`
	WriteSqlResponseTotal     *float64   `gorm:"column:Write_sql_response_total;type:double" json:"Write_sql_response_total"`
	ResultRows                *uint64    `gorm:"column:Result_rows;type:bigint" json:"Result_rows"`
	Warnings                  *string    `gorm:"column:Warnings;type:longtext" json:"Warnings"`
	BackoffDetail             *string    `gorm:"column:Backoff_Detail;type:varchar(4096)" json:"Backoff_Detail"`
	Prepared                  *uint8     `gorm:"column:Prepared;type:tinyint(1)" json:"Prepared"`
	Succ                      *uint8     `gorm:"column:Succ;type:tinyint(1)" json:"Succ"`
	IsExplicitTxn             *uint8     `gorm:"column:IsExplicitTxn;type:tinyint(1)" json:"IsExplicitTxn"`
	IsWriteCacheTable         *uint8     `gorm:"column:IsWriteCacheTable;type:tinyint(1)" json:"IsWriteCacheTable"`
	PlanFromCache             *uint8     `gorm:"column:Plan_from_cache;type:tinyint(1)" json:"Plan_from_cache"`
	PlanFromBinding           *uint8     `gorm:"column:Plan_from_binding;type:tinyint(1)" json:"Plan_from_binding"`
	HasMoreResults            *uint8     `gorm:"column:Has_more_results;type:tinyint(1)" json:"Has_more_results"`
	ResourceGroup             *string    `gorm:"column:Resource_group;type:varchar(64)" json:"Resource_group"`
	RequestUnitRead           *float64   `gorm:"column:Request_unit_read;type:double" json:"Request_unit_read"`
	RequestUnitWrite          *float64   `gorm:"column:Request_unit_write;type:double" json:"Request_unit_write"`
	TimeQueuedByRc            *float64   `gorm:"column:Time_queued_by_rc;type:double" json:"Time_queued_by_rc"`
	TidbCPUTime               *float64   `gorm:"column:Tidb_cpu_time;type:double" json:"Tidb_cpu_time"`
	TikvCPUTime               *float64   `gorm:"column:Tikv_cpu_time;type:double" json:"Tikv_cpu_time"`
	Plan                      *string    `gorm:"column:Plan;type:longtext" json:"Plan"`
	PlanDigest                *string    `gorm:"column:Plan_digest;type:varchar(128)" json:"Plan_digest"`
	BinaryPlan                *string    `gorm:"column:Binary_plan;type:longtext" json:"Binary_plan"`
	PrevStmt                  *string    `gorm:"column:Prev_stmt;type:longtext" json:"Prev_stmt"`
	Query                     *string    `gorm:"column:Query;type:longtext" json:"Query"`
}

// TableName AllClusterSlowQuery's table name
func (*AllClusterSlowQuery) TableName() string {
	return TableNameAllClusterSlowQuery
}
